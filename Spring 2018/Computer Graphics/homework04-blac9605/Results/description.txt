1. Unfortunately, I could not get Gradle to recognize my Homework04.java class file in the project directory. To get around this, I ended up editing the Interaction directory files directly. Thus, to view what all I have done for this project, run the ./interaction bat file.

2. To create the moving object within the window, I first initialize a movement vector that will adjust the object's x and y values each frame. This vector is randomized to contain an x and y value that is within -0.01 and 0.01, which I felt gave a pretty close approximation to the object reaching the border of the window within about 2 seconds. Then, I created the point object, which gets drawn each frame. Additionally, I could not get the collisions to work properly, so currently all moving objects fly off of the screen. To fix this I would need to first check to see if the current object's points are within the currently selected bounding box, and then adjust the objects vector accordingly.

3. To create the different bounding boxes for the window, I first created an array that holds the square bounding box and the strange-shaped bounding box. Then I created functions to generate a n-sided polygon for the hexagon and the 32-ogon border. These are each drawn according to which one is set at the time. They can be adjusted by using the keyboard numpad 1-4 or the keyboard numbers 1-4.

4. To create the different shaped moving objects, I created arrays to hold all of the coords of the objects. Then, they are drawn each frame according to their coords (which are changed according to the associated vector). The object can be changed by using the keyboard numbers and numpad 6-9. Additionaly, the size of the shape can be adjusted using the up and down arrow keys which scale the points that make up the object. Finally, the object's speed can be adjusted by pressing the left and right arrow keys, which increase the x and y components of the objects vector by 0.9 or 1.1.

5. I was unable to complete this section. However, to complete it, I would create an ArrayList that holds all of the currently active objects that are moving around, so that I could dynamically add to that list. Additionally, I might create a moving object class so that each item in that array could have its own random vector and size.
