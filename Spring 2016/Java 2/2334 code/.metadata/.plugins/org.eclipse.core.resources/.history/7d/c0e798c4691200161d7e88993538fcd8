import java.util.ArrayList;

/**
 * This class will be used to construct and manage Movie objects.
 */
public class Movie extends Media {
	
	private static final long serialVersionUID = 1L;
	/** The venue in which the Movie was released in */
	private String venue;
	/** The list of associated Actors with this Movie */
	private ArrayList<Actor> associatedActors = new ArrayList<Actor>();
	/** The list of associated Directors with this Movie */
	private ArrayList<Director> associatedDirectors = new ArrayList<Director>();
	/** The list of associated Producers with this Movie */
	private ArrayList<Producer> associatedProducers = new ArrayList<Producer>();
	

	/**
	 * A constructor.
	 * 
	 * @param title
	 *            The title of the Movie object.
	 * @param releaseYear
	 *            The release year of the Movie object.
	 * @param venue
	 *            The venue of the Movie object.
	 */
	public Movie(String title, String releaseYear, String venue) {
		super(title, releaseYear);

		this.venue = venue;

	}

	/**
	 * Returns the venue of the specified Movie
	 * 
	 * @return 			Returns the venue of the Movie object.
	 */
	public String getVenue() {
		if (venue == "" || venue == null) {
			return this.venue;
		}
		return " (" + this.venue + ") ";
	}
	
	/**
	 * This method adds the passed in Actor to the associatedActors list
	 * 
	 * @param a			Actor to add
	 */
	public void addMediaMaker(Actor a) {
		this.associatedActors.add(a);
	}
	
	/**
	 * Returns the associatedActors list
	 * 
	 * @return			associatedActors
	 */
	public ArrayList<Actor> getAssociatedActors() {
		return this.associatedActors;
	}
	
	/**
	 * This method adds the passed in Director to the associatedDirectors list
	 * 
	 * @param d			Director to add
	 */
	public void addMediaMaker(Director d) {
		this.associatedDirectors.add(d);
	}
	
	/**
	 * Returns the associatedDirectors list
	 * 
	 * @return			associatedDirectors
	 */
	public ArrayList<Director> getAssociatedDirectors() {
		return this.associatedDirectors;
	}
	
	/**
	 * This method adds the passed in Producer to the associatedProducers list
	 * 
	 * @param p			Producer to add
	 */
	public void addMediaMaker(Producer p) {
		this.associatedProducers.add(p);
	}
	
	/**
	 * Returns the associatedProducer list
	 * 
	 * @return			associatedProducers
	 */
	public ArrayList<Producer> getAssociatedProducer() {
		return this.associatedProducers;
	}

	/**
	 * Returns the media type of the Media object; in this case movie. Allows
	 * Media objects stored in a List to be seperated by media type.
	 * 
	 * @return Returns the string "MOVIE."
	 */
	@Override
	public String getMediaType() {
		return "MOVIE";
	}

	/**
	 * Allows the Movie object to be displayed in String format.
	 */
	public String toString() {
		return "MOVIE" + this.getVenue() + ":" + this.getTitle() + " (" + this.getReleaseYear() + ")";
	}
}